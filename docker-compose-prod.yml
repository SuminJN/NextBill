version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: nextbill-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - nextbill-network

  redis:
    image: redis:7-alpine
    container_name: nextbill-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - nextbill-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: nextbill-zookeeper-prod
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - nextbill-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: nextbill-kafka-prod
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped
    networks:
      - nextbill-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextbill-backend-prod
    depends_on:
      - mysql
      - redis
      - kafka
    ports:
      - "8080:8080"
    environment:
      # Database
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Kafka
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      
      # OAuth2
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_OAUTH2_REDIRECT_URI: ${GOOGLE_OAUTH2_REDIRECT_URI}
      
      # Mail
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      
      # Spring Profile
      SPRING_PROFILES_ACTIVE: prod
    restart: unless-stopped
    networks:
      - nextbill-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextbill-frontend-prod
    depends_on:
      - backend
    # 포트 제거 - nginx가 프록시 역할
    environment:
      VITE_API_URL: ${VITE_API_URL}
    restart: unless-stopped
    networks:
      - nextbill-network

  nginx:
    image: nginx:alpine
    container_name: nextbill-nginx-prod
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - nextbill-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  nextbill-network:
    driver: bridge
